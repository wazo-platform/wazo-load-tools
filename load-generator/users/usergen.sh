#!/bin/bash 
START_SEQ=0

if [ $# -ne 2 ]; then
    echo "missing sequence parameter"
    echo "usage ./usergen.sh SEQ PARAMS_FILE"
    echo "example ./usergen.sh 134 usergen_params.json" 
    exit 2
fi

# user_gen is aimed to create the json file representing a user.
user_gen () {
    local SEQUENCE=$1
    local PASSWORD=superpass
    local EXTENSION=$(echo $START_SEQ+$SEQUENCE|bc)
    local USERNAME=user$EXTENSION@wazo.io
    local USERS_CSV=user-files/users.csv
    local WEBRTC_UUID=$(jq -r .webrtc_uuid $PARAMS)
    local CONTEXT=$(jq -r .context $PARAMS)

    echo "$USERNAME;$PASSWORD;$EXTENSION" >> $USERS_CSV

    cp user.json.tpl user-files/$EXTENSION.json

    sed  -i "s/__SEQUENCE__/$SEQUENCE/g" user-files/$EXTENSION.json
    sed  -i "s/__USERNAME__/$USERNAME/g" user-files/$EXTENSION.json
    sed  -i "s/__PASSWORD__/$PASSWORD/g" user-files/$EXTENSION.json
    sed  -i "s/__EXTENSION__/$EXTENSION/g" user-files/$EXTENSION.json
    sed  -i "s/__WEBRTC_UUID__/$WEBRTC_UUID/g" user-files/$EXTENSION.json
    sed  -i "s/__CONTEXT__/$CONTEXT/g" user-files/$EXTENSION.json

    echo user-files/$EXTENSION.json
}

# push_users is aimed to create the user into a specific stack by calling the API
# and posting the JSON generated by the user_gen func.
# you'll need to specify the stack IP, a valid token that should be generated before
# using this script and the tenant uuid specific to the stack as well.
push_users () {
    local tenant_uuid=$1
    local token=$2
    local stack_ip=$3
    local user_file=$4

    STATUS=$(curl -k -v -X POST "https://$stack_ip:443/api/confd/1.1/users" \
        -w "%{http_code}" -s -o /dev/null \
        --header "Content-Type: application/json" \
        --header "Accept: application/json" \
        --header "Wazo-Tenant: $tenant_uuid" \
        --header "X-Auth-Token: $token" \
        --data @$user_file) 
    echo $STATUS        
}

SEQ=$1
PARAMS=$2
UUID=$(jq  -r .uuid $PARAMS)
TOKEN=$(jq -r .token $PARAMS)
STACK_IP=$(jq  -r .ip $PARAMS)


JSON=$(user_gen $SEQ)

mkdir -p  user-files/err
RETURN_CODE=$(push_users $UUID $TOKEN $STACK_IP $JSON)
if [ $RETURN_CODE -ne 201 ]; then
    USERNAME=$(echo $JSON | jq -r .lines[].name)
    echo "$USERNAME; STATUS CODE: $RETURN_CODE" >> user-files/users.err
    mv $JSON user-files/err/ 
fi
