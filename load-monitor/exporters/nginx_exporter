#!/bin/bash

cat <<EOF >/etc/nginx/sites-available/nginx-metrics
server {
    listen 8080 default_server;
    server_name status.localhost;
    keepalive_timeout 0;

    access_log off;

    allow 127.0.0.1;
    deny all;

    location /status {
        stub_status on;
    }
}
EOF

ln -s /etc/nginx/sites-available/nginx-metrics /etc/nginx/sites-enabled/nginx-metrics

cp /etc/nginx/nginx.conf /opt/

cat <<EOF >/etc/nginx/nginx.conf
user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##
  	log_format wazo '$remote_addr - $remote_user [$time_local] '
    	  '"$request" $status $body_bytes_sent '
  	  '"$http_referer" "$http_user_agent" '
  	  '"$server_name" '
  	  '"$upstream_response_time" '
  	  '$time_iso8601 $request_time $upstream_addr $upstream_response_length $upstream_response_time $upstream_status';

	access_log /var/log/nginx/wazo.access.log wazo;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
EOF

nginx -t
#nginx -s reload
systemctl restart nginx

cat <<EOF >/etc/systemd/system/nginx_exporter.service
[Unit]
Description=Nginx Exporter
After=docker.service
Requires=docker.service

[Service]
TimeoutStartSec=0
Restart=always
ExecStartPre=-/usr/bin/docker stop %n
ExecStartPre=-/usr/bin/docker rm %n
ExecStartPre=/usr/bin/docker pull nginx/nginx-prometheus-exporter:0.10.0

ExecStart=docker run --net=host nginx/nginx-prometheus-exporter:0.10.0 -nginx.scrape-uri=http://127.0.0.1:8080/status


[Install]
WantedBy=multi-user.target
EOF

systemctl enable nginx_exporter
systemctl start nginx_exporter
