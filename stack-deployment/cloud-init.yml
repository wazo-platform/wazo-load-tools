#cloud-config
hostname: wazo-stack
manage_etc_hosts: true
disable_root: false
output : { all : '| tee -a /var/log/cloud-init-output.log' }
users:
  - name: root
    lock-passwd: false
    inactive: false
    system: false
    shell: /bin/bash
    ssh-authorized-keys:
      - ssh-rsa < SSH PUBLIC KEY FOR ROOT ACCESS >
  - name: jenkins
    lock-passwd: false
    inactive: false
    system: false
    shell: /bin/bash
    sudo:
      - ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - ssh-rsa < SSH PUBLIC KEY FOR JENKINS ACCESS >

ssh_pwauth: yes
chpasswd:
  expire: false
  list:
    - root:secret
runcmd:
  - sed -i -e '/^#PermitRootLogin/s/^.*$/PermitRootLogin yes/' /etc/ssh/sshd_config
  - systemctl restart sshd.service
  - echo "apt-get update" >> /usr/local/bin/docker-install.sh
  - echo "apt-get install -y ca-certificates curl gnupg" >> /usr/local/bin/docker-install.sh
  - echo "install -m 0755 -d /etc/apt/keyrings" >> /usr/local/bin/docker-install.sh
  - echo "curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg" >> /usr/local/bin/docker-install.sh
  - echo "chmod a+r /etc/apt/keyrings/docker.gpg" >> /usr/local/bin/docker-install.sh
  - echo 'echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null' >> /usr/local/bin/docker-install.sh
  - echo "apt-get update" >> /usr/local/bin/docker-install.sh
  - echo "apt-get install -y  docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin" >> /usr/local/bin/docker-install.sh
  - chmod +x /usr/local/bin/docker-install.sh
  - /usr/local/bin/docker-install.sh
  - echo "apt install sudo wget -y && wget -O- http://mirror.wazo.io/fai/wazo-install-scripts/wazo-install.sh | sudo bash" > /usr/local/bin/stack-install.sh
  - echo "apt-get update && apt-get install wazo-plugind-cli" >> /usr/local/bin/stack-install.sh
  - chmod +x /usr/local/bin/stack-install.sh
  - /usr/local/bin/stack-install.sh
  - echo 'wget "https://github.com/pc-m/wazo-auth-split/raw/main/wazo-auth-token.tar"' >> /usr/local/bin/auth-split.sh
  - echo "tar -C / -xvof wazo-auth-token.tar" >> /usr/local/bin/auth-split.sh
  - echo "cd /etc/wazo-auth-token/conf.d/" >> /usr/local/bin/auth-split.sh
  - echo "cp /etc/wazo-auth/conf.d/*.yml ." >> /usr/local/bin/auth-split.sh
  - echo "systemctl enable wazo-auth-token" >> /usr/local/bin/auth-split.sh
  - echo "systemctl start wazo-auth-token" >> /usr/local/bin/auth-split.sh
  - echo "cd /etc/nginx/locations/https-enabled" >> /usr/local/bin/auth-split.sh
  - echo "ln -s ../https-available/wazo-auth-split ." >> /usr/local/bin/auth-split.sh
  - echo "rm wazo-auth" >> /usr/local/bin/auth-split.sh
  - echo "nginx -t" >> /usr/local/bin/auth-split.sh
  - echo "systemctl reload nginx"
  - chmod +x /usr/local/bin/auth-split.sh
  - /usr/local/bin/auth-split.sh
  - wget --directory-prefix=/usr/local/bin/ https://raw.githubusercontent.com/wazo-platform/wazo-scalability/main/load-monitor/exporters/wazo-flask-plugins.sh
  - wget --directory-prefix=/usr/local/bin/ https://raw.githubusercontent.com/wazo-platform/wazo-scalability/main/load-monitor/exporters/rabbitmq_exporter
  - wget --directory-prefix=/usr/local/bin/ https://raw.githubusercontent.com/wazo-platform/wazo-scalability/main/load-monitor/exporters/node_exporter
  - wget --directory-prefix=/usr/local/bin/ https://raw.githubusercontent.com/wazo-platform/wazo-scalability/main/load-monitor/exporters/asterisk.sh
  - wget --directory-prefix=/usr/local/bin/ https://raw.githubusercontent.com/wazo-platform/wazo-scalability/main/load-monitor/exporters/postgres_exporter
  - chmod +x /usr/local/bin/*
  - /usr/local/bin/wazo-flask-plugin.sh
  - /usr/local/bin/rabbitmq_exporter
  - /usr/local/bin/node_exporter
  - /usr/local/bin/asterisk.sh
  - /usr/local/bin/postgres_exporter
