services:
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin # grants admin role to anonymous access
      - GF_AUTH_ANONYMOUS_ENABLED=true # removes login 1/2
      - GF_AUTH_BASIC_ENABLED=false # removes login 2/2
    volumes:
      - grafana-data:/var/lib/grafana:rw
    healthcheck:
      test: ["CMD", "wget", "-o", "/dev/null" , "-O", "/dev/null", "http://localhost:3000"]
      start_period: 60s  # Let time for bootstrap (i.e. migration scripts)
      interval: 2s
      timeout: 1s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus-config:/etc/prometheus:ro
      - prometheus-data:/prometheus:rw
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=30d"
      - "--log.level=debug"
    healthcheck:
      test: ["CMD", "wget", "-o", "/dev/null" , "-O", "/dev/null", "http://localhost:9090/-/healthy"]
      interval: 2s
      timeout: 1s
      retries: 5

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager-config:/etc/alertmanager:ro
      - alertmanager-data:/alertmanager:rw
    healthcheck:
      test: ["CMD", "wget", "-o", "/dev/null" , "-O", "/dev/null", "http://localhost:9093/-/healthy"]
      interval: 2s
      timeout: 1s
      retries: 5

volumes:
  prometheus-data:
  grafana-data:
  alertmanager-data:
