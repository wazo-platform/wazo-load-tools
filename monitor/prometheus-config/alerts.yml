# NOTE:
# - ${value}: result from the last evaluation of the "for"

groups:
- name: Static Rules
  rules:
  - alert: MemoryLeak
    expr: (deriv(namedprocess_namegroup_memory_bytes{memtype="resident"}[10m]) > 10 * 1024) and on(instance) load_testing_enabled == 1
    for: 30m # taking at least one time of the window from the expr to remove "spike" and "big step"
    labels:
      severity: warning
    annotations:
      summary: "Memory usage has increased by 10KiB/s for more than 30 minutes"
      description: >-
        Instance **{{ $labels.instance }}**,
        Service {{ $labels.groupname }},
        Memory {{ with printf "namedprocess_namegroup_memory_bytes{memtype='resident',groupname='%s'}" .Labels.groupname | query }}{{ . | first | value | humanize1024 }}{{ end }}B

  - alert: MemoryLeakFromExporter
    expr: (deriv(process_resident_memory_bytes[10m]) > 10 * 1024) and on(instance) load_testing_enabled == 1
    for: 30m
    labels:
      severity: warning
    annotations:
      summary: "Memory usage has increased by 10KiB/s for more than 30 minutes"
      description: >-
        Instance **{{ $labels.instance }}**,
        Exporter {{ $labels.job }},
        Memory {{ with printf "process_resident_memory_bytes{job='%s'}" .Labels.job | query }}{{ . | first | value | humanize1024 }}{{ end }}B

  - alert: MemoryLeakFromRabbitMQ
    expr: (deriv(rabbitmq_node_mem_used[10m]) > 10 * 1024) and on(instance) load_testing_enabled == 1
    for: 30m
    labels:
      severity: warning
    annotations:
      summary: "Memory usage has increased by 10KiB/s for more than 30 minutes"
      description: >-
        Instance **{{ $labels.instance }}**,
        Service RabbitMQ,
        Memory {{ with query "rabbitmq_node_mem_used" }}{{ . | first | value | humanize1024 }}{{ end }}B

  - alert: CriticalRAMUsage
    expr: >-
      (1 -
        (
          (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)
          / node_memory_MemTotal_bytes
        )
      ) * 100 > 90
    for: 10m
    labels:
      severity: critical
    annotations:
      summary: "Memory usage has been above 90% for more than 10 minutes"
      description: "Instance **{{ $labels.instance }}**"

  - alert: CriticalCPULoad
    expr: >-
      (1 - avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[10m])))
      * 100 > 96
    for: 10m
    labels:
      severity: critical
    annotations:
      summary: "CPU load average has been above 96% for more than 10 minutes"
      description: "Instance **{{ $labels.instance }}**"

  - alert: AsteriskTotalCalls
    # Allow 10m without call
    expr: (increase(asterisk_calls_sum[10m]) == 0.0) and on(instance) load_testing_enabled == 1
    labels:
      severity: warning
    annotations:
      summary: "Total calls are not increasing"
      description: "Instance **{{ $labels.instance }}**"

  - alert: PGConnectionUsage
    expr: sum(pg_stat_activity_count) by (instance) / sum(pg_settings_max_connections) by (instance) * 100 > 90
    for: 10m
    labels:
      severity: critical
    annotations:
      summary: "PostgreSQL connections usage has been above 90% for more than 10 minutes"
      description: "Instance **{{ $labels.instance }}**"

  - alert: AsteriskFileDescriptors
    expr: namedprocess_namegroup_open_filedesc{groupname="asterisk"} > (8192 * 0.90)
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "Asterisk file descriptors count has been above 90% for more than 5 minutes"
      description: "Instance **{{ $labels.instance }}**, File Descriptors: {{ $value }}"

- name: Scenario Rules
  rules:
  - alert: AsteriskSimultCalls
    expr: (asterisk_calls_count > 35) and on(instance) load_testing_enabled == 1
    for: 10m
    labels:
      severity: warning
    annotations:
      summary: "Simultaneous calls are higher than expected"
      description: "Instance **{{ $labels.instance }}**, Calls: {{ $value }} > 35"
