rule_files:
    - alerts.yml

evaluation_interval: 1m

# NOTE:
# - Avoid to use ambiguous short syntax (1x10) for values
#   ex: 1x10 will produce 11 values
# - <metric>[10m] is left-open, i.e. samples with timestamps coinciding with
#   the left boundary of the range are excluded. That's why dummy series must
#   have interval less than 10m

tests:
  - name: when memory reaches threshold more than 10m
    interval: 1m
    input_series:
      - series: 'node_memory_MemFree_bytes{instance="localhost"}'
        values: '2+0x10'
      - series: 'node_memory_Buffers_bytes{instance="localhost"}'
        values: '2+0x10'
      - series: 'node_memory_Cached_bytes{instance="localhost"}'
        values: '2+0x10'
      - series: 'node_memory_MemTotal_bytes{instance="localhost"}'
        values: '100+0x10'
    alert_rule_test:
      - eval_time: 10m
        alertname: CriticalRAMUsage
        exp_alerts:
          - exp_labels:
              severity: critical
              instance: localhost
            exp_annotations:
              summary: "Memory usage has been above 90% for more than 10 minutes"
              description: "Instance **localhost**"

  - name: when memory reaches threshold less than 10m
    interval: 1m
    input_series:
      - series: 'node_memory_MemFree_bytes{instance="localhost"}'
        values: '30+0x8 2 2'
      - series: 'node_memory_Buffers_bytes{instance="localhost"}'
        values: '30+0x8 2 2'
      - series: 'node_memory_Cached_bytes{instance="localhost"}'
        values: '30+0x8 2 2'
      - series: 'node_memory_MemTotal_bytes{instance="localhost"}'
        values: '100+0x10'
    alert_rule_test:
      - eval_time: 10m
        alertname: CriticalRAMUsage
        exp_alerts: []

  - name: when memory increase by step
    interval: 1m
    input_series:
      - series: 'process_resident_memory_bytes{job="rabbitmq", instance="localhost"}'
        values: '0 100+0x28 200+0x30'
    alert_rule_test:
      - eval_time: 60m
        alertname: MemoryRabbitMQ
        exp_alerts:
          - exp_labels:
              severity: warning
              instance: localhost
              job: rabbitmq
            exp_annotations:
              summary: "rabbitmq memory increase abnormally: 200"
              description: "localhost of job rabbitmq has a potential memory leak"

  - name: when memory decrease by step
    interval: 1m
    input_series:
      - series: 'process_resident_memory_bytes{job="rabbitmq", instance="localhost"}'
        values: '0 200+0x28 100+0x30'
    alert_rule_test:
      - eval_time: 60m
        alertname: MemoryRabbitMQ
        exp_alerts: []

  - name: when memory increase slowly
    interval: 1m
    input_series:
      - series: 'process_resident_memory_bytes{job="rabbitmq", instance="localhost"}'
        values: '0 100+1x59'
    alert_rule_test:
      - eval_time: 60m
        alertname: MemoryRabbitMQ
        exp_alerts:
          - exp_labels:
              severity: warning
              instance: localhost
              job: rabbitmq
            exp_annotations:
              summary: "rabbitmq memory increase abnormally: 154.5"
              description: "localhost of job rabbitmq has a potential memory leak"
